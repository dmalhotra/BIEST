cc_library(
  name = "sctl",
  hdrs = [
    "sctl.hpp",
    "blas.h",
    "boundary_quadrature.hpp",
    "cheb_utils.hpp",
    "common.hpp",
    "fft_wrapper.hpp",
    "intrin-wrapper.hpp",
    "kernel_functions.hpp",
    "lapack.h",
    "legendre_rule.hpp",
    "morton.hpp",
    "parallel_solver.hpp",
    "quadrule.hpp",
    "sse2neon.h",
    "stacktrace.h",
    "tensor.hpp",
    "vec.hpp",
    "vec-test.hpp",
    #
    "boundary_integral.hpp",
    "comm.hpp",
    "fmm-wrapper.hpp",
    "lagrange-interp.hpp",
    "matrix.hpp",
    "mat_utils.hpp",
    "math_utils.hpp",
    "mem_mgr.hpp",
    "ode-solver.hpp",
    "ompUtils.hpp",
    "profile.hpp",
    "slender_element.hpp",
    "sph_harm.hpp",
    "tree.hpp",
    "vector.hpp",
    "vtudata.hpp",
  ],
  srcs = [
    "boundary_integral.cc",
    "comm.cc",
    "fmm-wrapper.cc",
    "lagrange-interp.cc",
    "matrix.cc",
    "mat_utils.cc",
    "math_utils.cc",
    "mem_mgr.cc",
    "ode-solver.cc",
    "ompUtils.cc",
    "profile.cc",
    "slender_element.cc",
    "sph_harm.cc",
    "tree.cc",
    "vector.cc",
    "vtudata.cc",
  ],
  visibility = ["//visibility:public"],
  copts = [
    "-DSCTL_GLOBAL_MEM_BUFF=0",
    "-DSCTL_QUAD_T=__float128",
    "-DSCTL_DOUBLE",
    "-DSCTL_HAVE_BLAS",
    "-DSCTL_HAVE_LAPACK",
    "-DSCTL_HAVE_FFTW",
  ],
  linkopts = [
    "-lblas",
    "-llapack",
    "-lfftw3",
  ],
)
